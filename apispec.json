{
	"openapi": "3.0.3",
	"info": {
		"title": "My API",
		"version": "1.0.0",
		"description": "OpenAPI for TodoList RESTful API",
		"contact": {
			"name": "Azie Melza Pratama",
			"email": "aziemp66@gmail.com",
			"url": "https:/github.con/aziemp66"
		},
		"license": {
			"name": "MIT",
			"url": "https://opensource.org/licenses/MIT"
		}
	},
	"servers": [
		{
			"url": "http://localhost:8080",
			"description": "Local server"
		},
		{
			"url": "https://{environtment}.aziezamannow.com/api/v1",
			"description": "Todo RESTful API",
			"variables": {
				"environment": {
					"description": "Server environment",
					"default": "dev",
					"enum": ["prod", "dev", "test"]
				}
			}
		}
	],
	"externalDocs": {
		"description": "Find out more about Me",
		"url": "https://github.com/aziemp66"
	},
	"paths": {
		"/todolist": {
			"get": {
				"summary": "Get all todo list",
				"description": "Only will return Active todolist, completed todolist or cancelled todolist will not be returned",
				"responses": {},
				"parameters": [
					{
						"name": "include done",
						"description": "include done todo list",
						"required": false,
						"in": "query",
						"schema": {
							"type": "boolean",
							"default": false,
							"nullable": true
						}
					},
					{
						"name": "name",
						"description": "search todo list by name",
						"required": false,
						"in": "query",
						"schema": {
							"type": "string",
							"nullable": false,
							"maxLength": 100,
							"minLength": 1
						},
						"examples": {
							"java": {
								"value": "Java"
							},
							"python": {
								"value": "Python"
							}
						}
					}
				]
			},
			"post": {
				"summary": "Create new todo list",
				"description": "Create a new Active todo list",
				"responses": {},
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"examples": {
								"java": {
									"value": {
										"name": "Belajar Pemrograman Java",
										"tags": ["java", "programming", "backend"],
										"priority": "medium"
									}
								}
							},
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"maxLength": 100,
										"minLength": 1
									},
									"priorities": {
										"type": "string",
										"enum": ["low", "medium", "high"]
									},
									"due_date": {
										"type": "string",
										"format": "date-time"
									},
									"note": {
										"type": "string",
										"maxLength": 1000,
										"minLength": 1
									}
								}
							}
						}
					}
				}
			}
		},
		"/todolist/{id}": {
			"get": {
				"summary": "Get todo list by id",
				"description": "Get todo list by id",
				"responses": {}
			},
			"put": {
				"summary": "Update todo list by id",
				"description": "Update todo list by id",
				"responses": {},
				"parameters": [
					{
						"name": "id",
						"description": "id of todo list",
						"required": true,
						"in": "path",
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"type": "object",
								"properties": {
									"name": {
										"type": "string",
										"minLength": 1,
										"maxLength": 100
									},
									"tags": {
										"type": "array",
										"items": {
											"type": "string",
											"minLength": 1
										}
									},
									"priorities": {
										"type": "string",
										"enum": ["low", "medium", "high"]
									},
									"due_date": {
										"type": "string",
										"format": "date-time"
									},
									"note": {
										"type": "string",
										"maxLength": 1000,
										"minLength": 1
									}
								}
							}
						}
					}
				}
			},
			"delete": {
				"summary": "Delete todo list by id",
				"description": "Delete todo list by id",
				"responses": {},
				"parameters": [
					{
						"name": "todo list id",
						"description": "todo list id",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				]
			}
		}
	}
}
